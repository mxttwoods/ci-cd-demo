# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

defaults:
  run:
    shell: bash
    working-directory: web

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CI: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: "web/package-lock.json"
      - name: Clean install dependencies
        run: npm ci
      - name: Build application
        run: npm run build --if-present
  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: "web/package-lock.json"
      - name: Clean install dependencies
        run: npm ci
      - name: Lint with ESLint
        run: npm run lint --if-present
  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: "web/package-lock.json"
      - name: Clean install dependencies
        run: npm ci
      - name: Test with test runner
        run: npm run test --if-present

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: "web/package-lock.json"
      - name: Clean install dependencies
        run: npm ci
      - name: Deploy to server
        run: npm run deploy --if-present
